#!/usr/bin/env ruby
#
# Changes the types of variables according to a TypeForge specification. This is
# a purely text-based replacement and is very limited in what it can handle. All
# declarations must be one-variable-per-line and of the form "<type> <var>;".
#
# This script is designed to be used as a wrapper for the compiler. All
# parameters except the first (the specification filename) are passed through.
#

if ARGV.size < 2 then
    puts "Usage: craft_change_types <spec-file> <c-flags> <source-file>"
end

# look for replacements in specification file
# TODO: add JSON parsing
actions = IO.readlines(ARGV[0])
replacements = Hash.new
actions.each do |a|
    if a =~/replace_vartype;[^;]*;(\w+);(\w+)/ then
        replacements[$1] = $2
    end
end

# scan for definitions and replace types where requested
ARGV.each do |arg|
    if arg =~ /\.cpp$/ then
        source = IO.readlines(arg)
        idx=0
        while idx < source.size do
            line = source[idx]
            if line =~ /double\s*(\*)?\s*(\w+)/ then
                rvname = $2
                if replacements.has_key?(rvname) then
                    #puts "replacing \"#{rvname}\" in \"#{line.chomp}\""
                    source[idx] = line.sub(/double/, replacements[rvname])
                end
            end
            idx += 1
        end
        # re-write source file
        out = File.open(arg, "w")
        source.each do |line|
            out.puts line
        end
        out.close
    end
end

# pass arguments through to compiler
exec("g++", *ARGV[1..-1])

